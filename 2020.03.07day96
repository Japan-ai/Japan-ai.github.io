✔️Done list
・絶対パス相対パス
・Docker環境構築方法とgitコマンド　インプットday3
・git
 git add 
 git commit
 git push
 git pull
 ブランチの作成
 修正・追加
 マージリクエスト
 マージの一連の流れ
 ・Laravel インプット1日目

✔️TIL

✔️more

✔️Output rate
✔️メンターからのアドバイス
①計算結果がブラウザ上で反映されていない
index.phpに記述せねばならないのですが、Calculation.phpとの連携がわからずブラウザ上で反映されていない状況です。

ファイルを整理するためにindex.phpとCalculator.phpを作成したのですが、ファイルの連携するための記述が十分に理解出来ていません。Calculator.phpでcreateメソッドを作成してindex.phpで反映させたい
↓
メンター回答
* 計算ボタンを押したときのPOST先がcalculator.phpになっているからです、POST先をindex.phpに変えてみてください。

②送信ボタンとクリアボタンのwidth,heightがcssの指示通り反映されない
cssでの記述ではなく、index.phpでheight=“30px”といった具合で記述すれば解消されるかと思い、実行したのですが改善されません。
↓
メンター回答
* １つ目。HTMLのタグの構造がおかしいです。formの中にcontainerのdivがありますが、containerのdivは一番外側にあるべきではないですか？
* ２つ目。意識して欲しいのは、最初から凝ったCSSを入れるのは避けてください。まずはCSSは設定せずに、生のHTMLだけでやってみてください。そこに少しずつレイアウトの調整を追加していけばいいと思います。
* ３つ目。UI・レイアウトはもちろん重要なのですが、ポートフォリオを作る上でこだわりすぎるのは辞めましょうね。それよりも機能がキチンと実装されていることが重要です。

 ③その他修正点アドバイス

* プログラムを作る上で大事なことは、1)重複をなくす（同じコードが散在させない）ことと、2)１つのクラスや１つのメソッドは１つのことに集中するということです。1)の理由はお分かりかと思いますが、機能修正や追加するとなった場合にあちこちを修正する羽目になり、保守性が低下します。2)の理由も保守性や可読性のためですが、１つのクラス（やメソッド）がいろいろな処理をやっている場合、その中の１つの処理を変更するだけで、他の処理にも影響が出かねません。
* 2)の観点で見た場合、Calculatorクラスは、a)計算とb)表示の２つの処理をやっているのであまりよいとは言えません。Calculatorクラスは計算をするだけにして、計算結果の表示はCalculatorを呼び出す側（今回の場合はindex.php）でやるべきです。具体的には、Calculatorには、calc($op, $num1, $num2) のような計算メソッドを定義し、呼び出す側から、このメソッドを使って計算してみてください。

