✔️Done list
・SSH（Secure SHell）

✔️TIL
 ・SFTPについて
 FTPクライアントなどファイル転送ツールのプロトコル選択欄で「SFTP」という規格がありますが、
 こちらはファイル転送で使う旧来のFTP通信をSSHの仕組みで安全にしたもの

 OpenSSH
 SSHで遠隔操作をしてくれるソフト（Macにデフォルトでインストール済）
 
 sshソフトウェア(OpenSSH)のインストール

　サーバ側の設定
 # 認証鍵を作成(-C [USERNAME]を付けるとGCP側で自動でユーザーを追加してくれる)
 # パスフレーズ入力を省略すると、ssh接続の時にパスフレーズを聞かれなくなる。
 $ ssh-keygen -t rsa -f ~/.ssh/my-ssh-key -C devuser

 # 権限を設定
 $ chmod 400 ~/.ssh/my-ssh-key

 # 公開鍵をコピー
 $ cat ~/.ssh/my-ssh-key.pub | pbcopy
　
  クライアント側の設定
  ターミナルから、ログインするユーザ名とホスト名を入力して接続します。
  $ ssh ユーザ名@ホスト（IPアドレス）

　sshポート番号を変更している場合
　安全のために、接続するサーバーがsshのポート番号を一般的に知られているデフォルトの「22」から変更している場合は、-pオプションで明示的にポート番号を指定して接続します。
　ポート番号が10021番の場合
　$ ssh -p 10021 ユーザ名＠ホスト
 
・ホスト認証
接続を行うとまず、ホスト認証が行われる。
接続時にサーバーからクライアントへ送られてくる「ホスト認証鍵」をクライアントで保存しているものと一致するかどうかを比較して虚偽のサーバーへでないことを確かめる。
サーバーから送られてくる認証鍵をクライアントに保存してよいかどうかのメッセージにyesを選択すると、ホーム配下の .ssh/known_hosts というファイルにホスト名と認証鍵の対応情報が書き込まれる。
（この時点ではまだ接続出来ていない）
保存が完了すると次回接続からはメッセージが表示されず、自動でホスト認証が行われる。
（万が一、接続先のサーバーが虚偽のものだった場合はお互いの認証鍵が一致しないのでエラーメッセージが表示される）

・ユーザー認証
　ホスト認証が完了したら、次は接続するユーザー（クライアント）の正当性を確かめるべくユーザー認証を行う。
　
 #パスワード認証（ユーザーのパスワードを用いる）
 #公開鍵認証（クライアント側で作成した鍵を用いる）の2種類の方法があるが、今回は前者のパスワード認証の方法を採用。
　$ ssh ユーザ名@ホスト（IPアドレス）＋パスワードの入力
 
 遠隔のコンピューターにファイルを送る
 クライアント側で
 $ scp (オプション) (送信するファイルの情報) (送られる場所)
 $ scp -P 22 -i ~/.ssh/id_rsa /home/hoge/test.txt iatlex@192.168.0.1:/home/iatlex/test_directory
  条件が以下の通りの場合
  接続先のコンピューターのアドレスが “192.168.0.1”
  接続先でログインするユーザーは”iatlex”
  接続する際のポートは”22″番
  クライアントが持っている秘密鍵は”~/.ssh/id_rsa”
  送りたいファイルは自分のコンピューターの”/home/hoge/”というディレクトリにある”test.txt”というテキストファイル
  送り先の場所は，遠隔のコンピューターの”/home/iatlex/test_directory”
 
 遠隔のコンピューターからファイルをとってくる
 クライアント側(つまり自分の手前のコンピューター)で
 $scp -P 22 -i ~/.ssh/id_rsa  iatlex@192.168.0.1:/home/iatlex/test.txt /opt/hogee
 　条件が以下の通りの場合
 　接続先のコンピューターのアドレスが “192.168.0.1”
 　接続先でログインするユーザーは”iatlex”
 　接続する際のポートは”22″番
 　クライアントが持っている秘密鍵は”~/.ssh/id_rsa”
　 とってきたいファイルは遠隔のコンピューターにある”/home/iatlex/”というディレクトリにある”test.txt”というテキストファイル
   とってきたのを置く場所は，自分のコンピューターの”/opt/hogee”
