✔️Done list
【大枠】エラーハンドリング　(通常の使用とは異なるURLをリクエストされても、異常終了せずユーザーに適切なフィードバックを返却するための設定)

- challengeListControllerの記述
- 方法１abort関数でabort(404)の表示
- 方法２ルートモデルバインディングで、404を表示させるために、Routingの変更(ChallengeListController@indexの修正)
- ルートモデルバインディングで、バリデーションエラーのレスポンスコード404を表示させるために、Controller.の変更(ChallengeListController.phpの修正)

- 方法１abort関数で、バリデーションエラーのレスポンスコード403を表示させる
- 方法２ポリシークラスで、バリデーションエラーのレスポンスコード403を表示させるためにModel(ポリシークラス)を作成する(app/Policies/FolderPolicy.phpの記述)
- ポリシークラスで、バリデーションエラーのレスポンスコード403を表示させるために、ポリシーとモデルを紐づける(ChallengeListController.php)
- ポリシークラスで、バリデーションエラーのレスポンスコード403を表示させるために、ポリシーをミドルウェアを介して使用する

- (いまのところ、フォルダが存在してそのフォルダとログインユーザーが紐づいてさえいれば処理を実行できる。つまりチャレンジリスト ID が他者のものでも編集できてしまう。そこで処理を実行する前にフォルダとチャレンジリストの紐づきを確認して、紐づいていなければ 404 を返す)リレーションが存在しない場合に、40４を表示させるために、Controllerの設定(ChallengelistController.phpの記述)
- 方法１abort関数で404 を表示
- 方法２checkRelation()の使用でフォルダとチャレンジリストの紐づきを確認(ChallengeListController.php)

- 404エラー画面の作成(resources/views/errors/404.blade.phpnの新規作成・記述)
- 403エラー画面の作成(resources/views/errors/403.blade.phpnの新規作成・記述)


✔️ITパスポート5P
✔️タイピング

✔️TIL
エラーハンドリングの
✔️TIL実数方法は
✔️TIL複数あり
✔️TIL

✔️more
エラーハンドリング(403,404,500エラーの表示)

✔️Output rate
95%
