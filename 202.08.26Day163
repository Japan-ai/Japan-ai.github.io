✔️Done list
　Ruby on Railsチュートリアル 第4版第3章
 
✔️TIL
 $ rails server　 省略　$ rails s（サーバーの起動、アプリの起動）
 $ rails console	省略　$ rails c()
 $ rails generate	省略　$ rails g
 $ rails test	　　省略　$ rails t
 $ bundle install	省略　$ bundle
 
 【アプリケーション作成時の雛形ファイル作成】
 $ rails new アプリケーション名（新規アプリケーション雛形の作成　※アプリケーション名に空白は使用できない点に注意）
 $ rails _5.2.3_ new（railsバージョン5.2.3を使用してRailsアプリ作成）
 $ rails new sample -d mysql(オプションの-dは、Railsのデフォルトのデータベースsqlite3から、一般的に広まっているデータベースである「mysql」や、Herokuでよく使用される「postgress」に変更することができます。)
 $ rails new sample -T(railsはデフォルトminitestというテストを使用。しかしrspecなどの他のテストフレームワークを使用したいという時は、このコマンドを使用すればテストを作成せずにnewすることができ、rspecの導入が簡単になります。)
 $ rails new sample -G(gitignoreを組み込み見たくない時に打ち込むコマンドです。)
 $ rails new sample -f(ファイルが存在する場合上書きして作成するためのコマンド。一度newしたが、もう一度やり直したい時に使用。)
 $ rails new sample--skip-bundle(Railsプロジェクト作成時にbundle installを行わないようにする)

【Heroku関連のコマンド】
 $ heroku create
 $ git push heroku master
 $ heroku logs
 
 【MVC関連のコマンド】
 $ rails generate scaffold モデル名 カラム名1:データ型1 カラム名2:データ型 2 …（scaffoldの利用、モデルの作成）
 $ rails destroy model User（モデルの削除　※モデル名以外の引数は不要）
 $ rails db:migrate（データベースのマイグレーション）
 $ rails db:rollback(データベースのマイグレーション一つ戻る)
 $ rails db:migrate VERSION=0(マイグレーションを最初の状況に戻す)

 $ rails generate controller StaticPages home help（StaticPagesコントローラー、home、helpアクションの作成）
 $ rails destroy  controller StaticPages home help（作成したStaticPagesコントローラー、home、helpアクションの削除）
 
 【HTTP(HyperText Transfer Protocol)の4つの基本的な操作】
 クライアント (例えばFirefoxやSafariなどのWebブラウザ) とサーバー (ApacheやNginxなどのWebサーバー) は、4つの基本操作を互いに認識できるようになっている
 GET(ページを取得する (get a page))
 POST(ページ上のフォームに入力した値を、ブラウザから送信する時に使用)
 PATCH(サーバー上の何かを更新する時に使用)
 DELETE(サーバー上の何かを削除する時に使用)
 
